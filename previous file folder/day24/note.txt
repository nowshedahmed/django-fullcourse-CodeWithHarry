==========================Models In Our Django E commerce Website | Python Django Tutorials In Hindi #24
===================================



python manage.py startapp 'foldername'


python manage.py runserver






মডেল হলো Django এর একটি অত্যন্ত গুরুত্বপূর্ণ অংশ, যা ডাটাবেসের তথ্য সংরক্ষণ এবং প্রক্রিয়াজাতকরণ করে।
      মডেল তৈরি করা হলে আপনি ডাটাবেসে কোন ধরনের তথ্য সংরক্ষণ করতে চান তা নির্ধারণ করতে পারেন।







মডেল ক্লাস তৈরি করুন: Django-র মডেল একটি Python ক্লাস যা models.Model ক্লাস থেকে উপস্থিত হতে হয়  | 
        মডেল ক্লাস তৈরি করার সময় আপনি ডাটাবেসে থাকা ফিল্ড গুলির ধরন এবং প্রতিটি ফিল্ডের মান নির্ধারণ করতে পারেন।
         """ from django.db import models

             class আপনার_মডেল_নাম(models.Model):
                ফিল্ড_নাম = models.ফিল্ড_ধরন(প্রতিষ্ঠানা_মান)  """







মাইগ্রেশন তৈরি করুন: মডেল তৈরির পরে, আপনার ডাটাবেস স্ট্রাকচার আপডেট করার জন্য মাইগ্রেশন তৈরি করতে হবে। মাইগ্রেশন এসে ডাটাবেস তালিকা (table) এবং ফিল্ড গুলির স্ট্রাকচার বা বৈশিষ্ট্য আপডেট করে।

"""
python manage.py makemigrations
python manage.py migrate

"""




# ===================================== explain is models ===========================================================



মডেল ব্যবহার করুন: মডেল তৈরি করার পরে, আপনি এটি ব্যবহার করতে পারেন Django অ্যাপ্লিকেশনে। আপনি মডেল অবজেক্ট তৈরি করে এর মাধ্যমে ডাটাবেস তথ্য রিড এবং লেখা করতে পারেন।


'''

from .models import আপনার_মডেল_নাম

# মডেল অবজেক্ট তৈরি
নতুন_অবজেক্ট = আপনার_মডেল_নাম(ফিল্ড_নাম='মান')

'''

এই পদক্ষেপগুলি অনুসরণ করে, আপনি Django মডেল ব্যবহার করতে পারবেন ডাটাবেস তথ্য সংরক্ষণ এবং প্রক্রিয়াজাতকরণের জন্য।

from django.db import models

# Create your models here.



'''  এই মডেল ডেফিনিশন কোডটি ডি'জাঙ্গোতে পণ্যের তথ্য সংরক্ষণ করার জন্য ব্যবহৃত হয়। এই মডেলে চারটি ফিল্ড আছে: প্রোডাক্ট আইডি, প্রোডাক্ট নাম, বিবরণ এবং প্রকাশের তারিখ।   '''





class Product(models.Model):  #>  এটি একটি ক্লাস ডিফিনিশন শুরু করে, "Product" নামের একটি মডেল তৈরি করে।

    product_id = models.AutoField   #> এটি একটি ফিল্ড ডেফাইন করে, যা একটি অটোম্যাটিক ইনক্রিমেন্ট হয়ে যাবে। এটি প্রতিটি নতুন পণ্যের জন্য একটি অনন্য আইডি তৈরি করবে।
    product_name = models.CharField(max_length=50)   #> এটি একটি ফিল্ড ডেফাইন করে, যা টেক্সট ধরনের তথ্য সংরক্ষণ করবে এবং এর দৈর্ঘ্য সর্বাধিক ৫০ অক্ষর হতে পারবে|
    desc = models.CharField(max_length=300)   #> এটি আরেকটি ফিল্ড ডেফাইন করে, যা বিস্তারিত তথ্য সংরক্ষণ করবে এবং এর দৈর্ঘ্য সর্বাধিক ৩০০ অক্ষর হতে পারবে।
    pub_date = models.DateField() #> এটি একটি তারিখ ফিল্ড ডেফাইন করে, যা পণ্যের প্রকাশের তারিখ সংরক্ষণ করবে।











+=================================== migrations ================================


ডি'জাঙ্গোতে 'মাইগ্রেশন' বা স্থানান্তর হলো মডেল এবং ডাটাবেস স্কিমা পরিচালনার প্রক্রিয়া। 
    যখন আপনি ডি'জাঙ্গো মডেলে পরিবর্তন করেন (যেমন: নতুন ফিল্ড যোগ করা, ফিল্ড মুছে ফেলা, বা ফিল্ডের ধরণ পরিবর্তন করা), তখন ডি'জাঙ্গো মাইগ্রেশন ফাইল তৈরি করে।

এই মাইগ্রেশন ফাইলগুলি ডি'জাঙ্গো ব্যবহার করে ডাটাবেস স্কিমা পরিবর্তনের নির্দেশ হিসেবে। 
    মাইগ্রেশন ফাইলগুলি ডাটাবেসে পরিবর্তন সম্পাদন করার নির্দেশ দেয় এবং ডি'জাঙ্গো এর 'makemigrations' এবং
          'migrate' মন্ত্রাগুলি ব্যবহার করে আপনি এই পরিবর্তনগুলি ডাটাবেসে প্রযোজ্য করতে পারেন।

মাইগ্রেশন ব্যবহার করে ডি'জাঙ্গো আপনার প্রজেক্টের ডাটাবেস স্কিমা যখন মডেলের পরিবর্তন হয়, তখন আপনার ডাটাবেস স্ট্রাকচার সঙ্গে সমতল রাখার জন্য একটি পরিচিত উপায় প্রদান করে।
           এটি আপনাকে অন্যান্য ডেভেলপারদের সহযোগিতা করার এবং আপনার অ্যাপ্লিকেশনের ডেটা সামগ্রিতা বজায় রাখার জন্য সুবিধা প্রদান করে।

python manage.py makemigrations
python manage.py migrate



















